#!/bin/bash

# Get the directory this file is in
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

Help()
{
    echo "Sync the project assets with google drive"
    echo
    echo "Syntax: sync [-h|u|d|s|c]"
    echo "Options:"
    echo "h        print this Help"
    echo "u        sync \"Up\" from local drive to google drive"
    echo "d        sync \"Down\" from google drive to local drive"
    echo "s        Status of the matched files in source and destination"
    echo "c        (re)Configure remote access"
}

ConfigureRemote()
{
    # When the remote already exists delete it
    rclone config delete wasteland-warrior
    # Set up the remote
    rclone config create wasteland-warrior drive config_is_local=false
    # Authenticate the remote with web browser passing in defaults
    echo -e; printf '%s\n' y n | rclone config reconnect wasteland-warrior:
}

CheckStatus()
{
    # Check if the files in source and destination match
    rclone check wasteland-warrior:assets project/assets

}

SyncDown()
{
    # Sync assets from the server to the local machine
    rclone sync --interactive wasteland-warrior:assets $DIR/project/assets;$SHELL
}

SyncUp()
{
    # Sync assets from the server to the local machine
    rclone sync --interactive $DIR/project/assets wasteland-warrior:assets;$SHELL
}

# Check for args, if no args, then show help and exit with general error
if [ -z "$1" ] 
    then Help
    exit 1
fi

while getopts ":hudsc" option; do
   case $option in
      h) # Display Help
         Help
         exit;;
      u) # Upload
         SyncUp
         exit;;
      d) # Download
         SyncDown
         exit;;
      s) # Check
         CheckStatus
         exit;;
      c) # (re)Configure Remote
         ConfigureRemote
         exit;;         
     \?) # Invalid option
         echo "Error: Invalid option"
         echo "use -h for a list of options"
         exit;;
   esac
done